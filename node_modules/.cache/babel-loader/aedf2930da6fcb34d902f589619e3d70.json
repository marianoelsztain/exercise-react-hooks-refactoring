{"ast":null,"code":"var _jsxFileName = \"/home/made/Repos/exercise-react-hooks-refactoring/src/context/Provider.js\";\n// src/context/Provider.js\nimport React, { useState } from 'react';\nimport CarsContext from './CarsContext'; // this.state = {\n//   cars: {\n//     red: false,\n//     blue: false,\n//     yellow: false,\n//   },\n// }\n\nfunction Provider() {\n  const [redCar, setRedCar] = useState(false);\n  const [blueCar, setBlueCar] = useState(false);\n  const [yellowCar, setYellowCar] = useState(false);\n\n  const moveCar = (car, side) => {\n    switch (car) {\n      case 'redCar':\n        setRedCar(side);\n        break;\n\n      case 'blueCar':\n        setBlueCar(side);\n        break;\n\n      case 'yellowCar':\n        setYellowCar(side);\n        break;\n\n      default:\n        console.log('nada');\n        break;\n    }\n  };\n\n  const context = {\n    cars: {\n      redCar,\n      blueCar,\n      yellowCar\n    },\n    moveCar\n  };\n  const {\n    children\n  } = this.props;\n  return /*#__PURE__*/React.createElement(CarsContext.Provider, {\n    value: context,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, children);\n}\n\nexport default Provider;","map":{"version":3,"sources":["/home/made/Repos/exercise-react-hooks-refactoring/src/context/Provider.js"],"names":["React","useState","CarsContext","Provider","redCar","setRedCar","blueCar","setBlueCar","yellowCar","setYellowCar","moveCar","car","side","console","log","context","cars","children","props"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,QAAT,GAAoB;AAElB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMS,OAAO,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC7B,YAAQD,GAAR;AACE,WAAK,QAAL;AACEN,QAAAA,SAAS,CAACO,IAAD,CAAT;AACA;;AACF,WAAK,SAAL;AACEL,QAAAA,UAAU,CAACK,IAAD,CAAV;AACA;;AACF,WAAK,WAAL;AACEH,QAAAA,YAAY,CAACG,IAAD,CAAZ;AACA;;AACF;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA;AAZJ;AAcD,GAfD;;AAiBA,QAAMC,OAAO,GAAG;AACdC,IAAAA,IAAI,EAAE;AACJZ,MAAAA,MADI;AAEJE,MAAAA,OAFI;AAGJE,MAAAA;AAHI,KADQ;AAMdE,IAAAA;AANc,GAAhB;AASA,QAAM;AAAEO,IAAAA;AAAF,MAAe,KAAKC,KAA1B;AAEA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEH,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,QADH,CADF;AAKD;;AAED,eAAed,QAAf","sourcesContent":["// src/context/Provider.js\nimport React, { useState } from 'react';\nimport CarsContext from './CarsContext';\n\n// this.state = {\n//   cars: {\n//     red: false,\n//     blue: false,\n//     yellow: false,\n//   },\n// }\n\nfunction Provider() {\n\n  const [redCar, setRedCar] = useState(false);\n  const [blueCar, setBlueCar] = useState(false);\n  const [yellowCar, setYellowCar] = useState(false);\n\n  const moveCar = (car, side) => {\n    switch (car) {\n      case 'redCar':\n        setRedCar(side);\n        break;\n      case 'blueCar':\n        setBlueCar(side);\n        break;\n      case 'yellowCar':\n        setYellowCar(side);\n        break;\n      default:\n        console.log('nada');\n        break;\n    }\n  };\n\n  const context = {\n    cars: {\n      redCar,\n      blueCar,\n      yellowCar,\n    },\n    moveCar,\n  };\n\n  const { children } = this.props;\n\n  return (\n    <CarsContext.Provider value={context}>\n      {children}\n    </CarsContext.Provider>\n  );\n}\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}